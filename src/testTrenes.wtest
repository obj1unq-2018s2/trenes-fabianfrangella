import trenes.*

describe "trencitos para todos" {

	// vagones de carga
	var vagonDeCarga1 = new VagonDeCarga(cargaMaxima = 15000)
	var vagonDeCarga2 = new VagonDeCarga(cargaMaxima = 8000)
	var vagonDeCarga3 = new VagonDeCarga(cargaMaxima = 500)
	// vagones de pasajeros
	var vagonDePasajeros1 = new VagonDePasajeros(ancho = 2, largo = 2.5,banios = 10)
	var vagonDePasajeros2 = new VagonDePasajeros(ancho = 2, largo = 7, banios = 5)
	// locomotoras
	var locomotora1 = new Locomotora(
		peso = 1000, pesoMaxArrastre = 15000, velocidadMaxima = 80)
	var locomotora2 = new Locomotora(
		peso = 800, pesoMaxArrastre = 11000, velocidadMaxima = 100)
	var locomotora3 = new Locomotora(
		peso=500, pesoMaxArrastre = 8000, velocidadMaxima = 50)
	var locomotora4 = new Locomotora(
		peso = 10000, pesoMaxArrastre=10100, velocidadMaxima=100)
	var locomotora5 = new Locomotora(
		peso=100,pesoMaxArrastre=3000,velocidadMaxima=60)
	var locomotora6 = new Locomotora(
		peso = 100, pesoMaxArrastre = 30000, velocidadMaxima = 350)
	
	
	// formaciones
	
	var largaDist1 = new FormacionDeLargaDistancia(ciudadesQueUne=2)
		
	var largaDist2 = new FormacionDeLargaDistancia(ciudadesQueUne=3)
	
	var altaVel1 = new FormacionDeAltaVelocidad()
	
	var formacion1 = new FormacionDeCortaDistancia()
	var formacion2 = new FormacionDeCortaDistancia()
	var formacion3 = new FormacionDeCortaDistancia()
	var formacion4 = new FormacionDeCortaDistancia()
	var formacion5 = new FormacionDeCortaDistancia()
	// depositos
	
	var deposito1 = new Deposito(
		formacionesArmadas=#{formacion1,formacion4},locomotorasSueltas=#{locomotora1})
	var deposito2 = new Deposito(
		formacionesArmadas=
			#{formacion1},locomotorasSueltas=#{locomotora1,locomotora3,locomotora5})	
	
	fixture{
		formacion1.agregarLocomotora(locomotora1)
		formacion1.agregarLocomotora(locomotora3)
		formacion1.agregarVagon(vagonDeCarga1)
		formacion1.agregarVagon(vagonDeCarga2)
		formacion2.agregarLocomotora(locomotora2)
		formacion2.agregarVagon(vagonDePasajeros1)
		formacion2.agregarVagon(vagonDePasajeros2)
		formacion3.agregarVagon(vagonDeCarga2)
		formacion3.agregarLocomotora(locomotora4)
		formacion4.agregarLocomotora(locomotora1)
		formacion4.agregarVagon(vagonDePasajeros1)
		formacion4.agregarVagon(vagonDePasajeros2)
		formacion4.agregarVagon(vagonDeCarga2)
		altaVel1.agregarLocomotora(locomotora6)
		altaVel1.agregarVagon(vagonDeCarga3)
		largaDist1.agregarLocomotora(locomotora2)
		largaDist2.agregarLocomotora(locomotora3)
		largaDist1.agregarVagon(vagonDeCarga1)
		largaDist1.agregarVagon(vagonDeCarga2)
		largaDist2.agregarVagon(vagonDePasajeros1)
		largaDist2.agregarVagon(vagonDePasajeros2)
		formacion5.agregarLocomotora(locomotora2)
		formacion5.agregarVagon(vagonDeCarga2)
	}
	
	test "vagones livianos"{
		assert.equals(formacion2.vagonesLivianos(),1)
	}
	
	test "velocidad maxima de una formacion"{
		assert.equals(formacion1.velocidadMaxima(),locomotora3.velocidadMaxima())
	}
	
	test "es eficiente"{
		assert.that(formacion2.esEficiente())	
	}
	
	test "no es eficiente"{
		assert.that(!formacion3.esEficiente())
	}
	
	test "puede moverse"{
		assert.that(formacion2.sePuedeMover())
	}
	
	test "no puede moverse"{
		assert.that(!formacion1.sePuedeMover())
	}
	
	test "no le faltan kilos de faltantes"{
		assert.equals(formacion2.kilosDeEmpujeFaltantes(),0)
	}
	
	test "faltan kilos de empuje"{
		assert.equals(formacion1.kilosDeEmpujeFaltantes(),1820)
	}
	
	test "vagones mas pesados"{
		assert.equals(deposito1.vagonesMasPesados(),#{vagonDeCarga2,vagonDeCarga1})
	}
	
	test "es formacion compleja" {
		assert.that(formacion1.esCompleja())
	}
	
	test "agregar locomotora para mover"{
		deposito2.agregarLocomotoraParaMover(formacion1)
		assert.that(formacion1.sePuedeMover())
	}
	
	test "formaciones estan bien armadas" {
	    assert.that(formacion5.estaBienArmada())
		assert.that(largaDist2.estaBienArmada())
		assert.that(altaVel1.estaBienArmada())
	}
	
	test "limite de velocidad"{
		assert.equals(altaVel1.velocidadMaxima(),350)
		assert.equals(largaDist2.velocidadMaxima(),50)
		assert.equals(formacion1.velocidadMaxima(),50)
	}
	
	
}